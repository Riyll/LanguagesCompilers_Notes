\contentsline {chapter}{\numberline {1}Introduction to Programming Languages}{4}{chapter.1}%
\contentsline {section}{\numberline {1.1}Intro to PLs: Outline \& Objectives}{4}{section.1.1}%
\contentsline {subsection}{\numberline {1.1.1}Why study PLs ?}{4}{subsection.1.1.1}%
\contentsline {subsection}{\numberline {1.1.2}Languages: Natural \& Formal}{4}{subsection.1.1.2}%
\contentsline {subsection}{\numberline {1.1.3}Synatax \& Semantics}{4}{subsection.1.1.3}%
\contentsline {subsection}{\numberline {1.1.4}What is a PL?}{5}{subsection.1.1.4}%
\contentsline {paragraph}{A PL has:}{5}{section*.3}%
\contentsline {section}{\numberline {1.2}Factors affecting PL evolution}{5}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}Applications}{5}{subsection.1.2.1}%
\contentsline {subsection}{\numberline {1.2.2}Hardware/Software trends}{6}{subsection.1.2.2}%
\contentsline {subsubsection}{Hardware Trends}{6}{section*.4}%
\contentsline {subsection}{\numberline {1.2.3}Other factors}{6}{subsection.1.2.3}%
\contentsline {section}{\numberline {1.3}PL generations}{6}{section.1.3}%
\contentsline {subsection}{\numberline {1.3.1}Machine Language (Example)}{7}{subsection.1.3.1}%
\contentsline {subsection}{\numberline {1.3.2}Assembly Language (Example)}{7}{subsection.1.3.2}%
\contentsline {subsection}{\numberline {1.3.3}Evolution of imperative \& OOP PLs}{7}{subsection.1.3.3}%
\contentsline {subsection}{\numberline {1.3.4}Fortran IV}{7}{subsection.1.3.4}%
\contentsline {subsection}{\numberline {1.3.5}COBOL (1959-61)}{7}{subsection.1.3.5}%
\contentsline {subsection}{\numberline {1.3.6}ALGOL 60 (1957-60)}{7}{subsection.1.3.6}%
\contentsline {subsection}{\numberline {1.3.7}Modular Languages}{8}{subsection.1.3.7}%
\contentsline {subsection}{\numberline {1.3.8}Smalltalk (1976,1980)}{8}{subsection.1.3.8}%
\contentsline {subsection}{\numberline {1.3.9}C++}{8}{subsection.1.3.9}%
\contentsline {section}{\numberline {1.4}Summary}{8}{section.1.4}%
\contentsline {chapter}{\numberline {2}Computational models and Paradigms}{9}{chapter.2}%
\contentsline {section}{\numberline {2.1}Computational Models}{9}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}Imperatives}{9}{subsection.2.1.1}%
\contentsline {subsection}{\numberline {2.1.2}Functional}{9}{subsection.2.1.2}%
\contentsline {subsection}{\numberline {2.1.3}Logic}{9}{subsection.2.1.3}%
\contentsline {section}{\numberline {2.2}Machine architecture}{10}{section.2.2}%
\contentsline {chapter}{\numberline {3}Source code Execution}{11}{chapter.3}%
\contentsline {section}{\numberline {3.1}A compiler is a translator}{11}{section.3.1}%
\contentsline {subsection}{\numberline {3.1.1}Why study compilers?}{11}{subsection.3.1.1}%
\contentsline {subsection}{\numberline {3.1.2}The phases of a compiler}{11}{subsection.3.1.2}%
\contentsline {paragraph}{Example of a Lexical Analysis}{12}{section*.7}%
\contentsline {paragraph}{Type of errors in a compiler}{12}{section*.8}%
\contentsline {paragraph}{Example of Semantics}{13}{table.caption.10}%
\contentsline {section}{\numberline {3.2}Compilation}{13}{section.3.2}%
\contentsline {subsection}{\numberline {3.2.1}From Compilation to execution}{13}{subsection.3.2.1}%
\contentsline {section}{\numberline {3.3}What is an interpreter?}{13}{section.3.3}%
\contentsline {chapter}{\numberline {4}A very Simple Programming Language}{15}{chapter.4}%
\contentsline {section}{\numberline {4.1}The first Programming Languages}{15}{section.4.1}%
\contentsline {subsection}{\numberline {4.1.1}Machine Languages}{15}{subsection.4.1.1}%
\contentsline {subsection}{\numberline {4.1.2}Machine vs. Assembly Languages}{15}{subsection.4.1.2}%
\contentsline {subsection}{\numberline {4.1.3}Floating point operations}{16}{subsection.4.1.3}%
\contentsline {subsection}{\numberline {4.1.4}Indexing}{16}{subsection.4.1.4}%
\contentsline {subsection}{\numberline {4.1.5}Pseudo-Code Interpreters}{16}{subsection.4.1.5}%
\contentsline {section}{\numberline {4.2}Designing a Simple Language}{16}{section.4.2}%
\contentsline {subsection}{\numberline {4.2.1}The first Language}{16}{subsection.4.2.1}%
\contentsline {subsection}{\numberline {4.2.2}What is a Programing}{16}{subsection.4.2.2}%
\contentsline {subsection}{\numberline {4.2.3}Things to think about}{17}{subsection.4.2.3}%
\contentsline {subsection}{\numberline {4.2.4}Main Memory Organization}{17}{subsection.4.2.4}%
\contentsline {subsection}{\numberline {4.2.5}Instrucion Design}{17}{subsection.4.2.5}%
\contentsline {subsection}{\numberline {4.2.6}Design Principle}{17}{subsection.4.2.6}%
\contentsline {paragraph}{Impossible Error Principle}{17}{section*.11}%
\contentsline {subsection}{\numberline {4.2.7}Summary: Introducition Syntax and Semantics}{18}{subsection.4.2.7}%
\contentsline {section}{\numberline {4.3}How to code operations?}{18}{section.4.3}%
\contentsline {subsection}{\numberline {4.3.1}Regularity Principle}{18}{subsection.4.3.1}%
\contentsline {subsection}{\numberline {4.3.2}Orthogonality and Symmetry}{18}{subsection.4.3.2}%
\contentsline {subsection}{\numberline {4.3.3}Pushing Symmetry and Orthogonality too far}{18}{subsection.4.3.3}%
\contentsline {paragraph}{Example from before}{18}{section*.12}%
\contentsline {subsection}{\numberline {4.3.4}Rrepresenting Control Flow}{19}{subsection.4.3.4}%
\contentsline {subsection}{\numberline {4.3.5}Simple Assignment/Moving Data}{19}{subsection.4.3.5}%
\contentsline {chapter}{\numberline {5}Lexical Analysis}{20}{chapter.5}%
\contentsline {section}{\numberline {5.1}Reminder about compilation steps}{20}{section.5.1}%
\contentsline {section}{\numberline {5.2}Lexical Analysis}{20}{section.5.2}%
\contentsline {section}{\numberline {5.3}Regular Expressions}{21}{section.5.3}%
\contentsline {subsection}{\numberline {5.3.1}Important Symbols}{21}{subsection.5.3.1}%
\contentsline {subsection}{\numberline {5.3.2}Precedence}{21}{subsection.5.3.2}%
\contentsline {section}{\numberline {5.4}Finite State Automata}{22}{section.5.4}%
\contentsline {subsection}{\numberline {5.4.1}Deterministic Finite State Automata}{22}{subsection.5.4.1}%
\contentsline {subsection}{\numberline {5.4.2}Non-Deterministic Finite State Automata}{22}{subsection.5.4.2}%
\contentsline {subsection}{\numberline {5.4.3}DFA vs NFA}{22}{subsection.5.4.3}%
\contentsline {section}{\numberline {5.5}Lexical Analyzer Implementation}{23}{section.5.5}%
\contentsline {section}{\numberline {5.6}State Diagram Design}{23}{section.5.6}%
\contentsline {section}{\numberline {5.7}On Lexical Errors}{24}{section.5.7}%
\contentsline {section}{\numberline {5.8}Practice Problems}{24}{section.5.8}%
\contentsline {chapter}{\numberline {6}Language Description \& Analysis at the Syntactic Level:}{25}{chapter.6}%
\contentsline {section}{\numberline {6.1}Regular and Context-Free Languages}{25}{section.6.1}%
\contentsline {subsection}{\numberline {6.1.1}Regular Languages}{25}{subsection.6.1.1}%
\contentsline {subsection}{\numberline {6.1.2}Analysis vs. Generation}{25}{subsection.6.1.2}%
\contentsline {subsection}{\numberline {6.1.3}Non-Regular Languages}{26}{subsection.6.1.3}%
\contentsline {paragraph}{Grammar}{26}{section*.13}%
