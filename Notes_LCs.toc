\contentsline {chapter}{\numberline {1}Introduction to Programming Languages}{4}{chapter.1}%
\contentsline {section}{\numberline {1.1}Intro to PLs: Outline \& Objectives}{4}{section.1.1}%
\contentsline {subsection}{\numberline {1.1.1}Why study PLs ?}{4}{subsection.1.1.1}%
\contentsline {subsection}{\numberline {1.1.2}Languages: Natural \& Formal}{4}{subsection.1.1.2}%
\contentsline {subsection}{\numberline {1.1.3}Synatax \& Semantics}{4}{subsection.1.1.3}%
\contentsline {subsection}{\numberline {1.1.4}What is a PL?}{5}{subsection.1.1.4}%
\contentsline {paragraph}{A PL has:}{5}{section*.3}%
\contentsline {section}{\numberline {1.2}Factors affecting PL evolution}{5}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}Applications}{5}{subsection.1.2.1}%
\contentsline {subsection}{\numberline {1.2.2}Hardware/Software trends}{6}{subsection.1.2.2}%
\contentsline {subsubsection}{Hardware Trends}{6}{section*.4}%
\contentsline {subsection}{\numberline {1.2.3}Other factors}{6}{subsection.1.2.3}%
\contentsline {section}{\numberline {1.3}PL generations}{6}{section.1.3}%
\contentsline {subsection}{\numberline {1.3.1}Machine Language (Example)}{7}{subsection.1.3.1}%
\contentsline {subsection}{\numberline {1.3.2}Assembly Language (Example)}{7}{subsection.1.3.2}%
\contentsline {subsection}{\numberline {1.3.3}Evolution of imperative \& OOP PLs}{7}{subsection.1.3.3}%
\contentsline {subsection}{\numberline {1.3.4}Fortran IV}{7}{subsection.1.3.4}%
\contentsline {subsection}{\numberline {1.3.5}COBOL (1959-61)}{7}{subsection.1.3.5}%
\contentsline {subsection}{\numberline {1.3.6}ALGOL 60 (1957-60)}{7}{subsection.1.3.6}%
\contentsline {subsection}{\numberline {1.3.7}Modular Languages}{8}{subsection.1.3.7}%
\contentsline {subsection}{\numberline {1.3.8}Smalltalk (1976,1980)}{8}{subsection.1.3.8}%
\contentsline {subsection}{\numberline {1.3.9}C++}{8}{subsection.1.3.9}%
\contentsline {section}{\numberline {1.4}Summary}{8}{section.1.4}%
\contentsline {chapter}{\numberline {2}Computational models and Paradigms}{10}{chapter.2}%
\contentsline {section}{\numberline {2.1}Computational Models}{10}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}Imperatives}{10}{subsection.2.1.1}%
\contentsline {subsection}{\numberline {2.1.2}Functional}{10}{subsection.2.1.2}%
\contentsline {subsection}{\numberline {2.1.3}Logic}{11}{subsection.2.1.3}%
\contentsline {section}{\numberline {2.2}Machine architecture}{11}{section.2.2}%
\contentsline {chapter}{\numberline {3}Source code Execution}{12}{chapter.3}%
\contentsline {section}{\numberline {3.1}A compiler is a translator}{12}{section.3.1}%
\contentsline {subsection}{\numberline {3.1.1}Why study compilers?}{12}{subsection.3.1.1}%
\contentsline {subsection}{\numberline {3.1.2}The phases of a compiler}{12}{subsection.3.1.2}%
\contentsline {paragraph}{Example of a Lexical Analysis}{13}{section*.7}%
\contentsline {paragraph}{Type of errors in a compiler}{13}{section*.8}%
\contentsline {paragraph}{Example of Semantics}{14}{table.caption.10}%
\contentsline {section}{\numberline {3.2}Compilation}{14}{section.3.2}%
\contentsline {subsection}{\numberline {3.2.1}From Compilation to execution}{14}{subsection.3.2.1}%
\contentsline {section}{\numberline {3.3}What is an interpreter?}{15}{section.3.3}%
\contentsline {chapter}{\numberline {4}A very Simple Programming Language}{16}{chapter.4}%
\contentsline {section}{\numberline {4.1}The first Programming Languages}{16}{section.4.1}%
\contentsline {subsection}{\numberline {4.1.1}Machine Languages}{16}{subsection.4.1.1}%
\contentsline {subsection}{\numberline {4.1.2}Machine vs. Assembly Languages}{16}{subsection.4.1.2}%
\contentsline {subsection}{\numberline {4.1.3}Floating point operations}{17}{subsection.4.1.3}%
\contentsline {subsection}{\numberline {4.1.4}Indexing}{17}{subsection.4.1.4}%
\contentsline {subsection}{\numberline {4.1.5}Pseudo-Code Interpreters}{17}{subsection.4.1.5}%
\contentsline {section}{\numberline {4.2}Designing a Simple Language}{17}{section.4.2}%
\contentsline {subsection}{\numberline {4.2.1}The first Language}{17}{subsection.4.2.1}%
\contentsline {subsection}{\numberline {4.2.2}What is a Programing}{18}{subsection.4.2.2}%
\contentsline {subsection}{\numberline {4.2.3}Things to think about}{18}{subsection.4.2.3}%
\contentsline {subsection}{\numberline {4.2.4}Main Memory Organization}{18}{subsection.4.2.4}%
\contentsline {subsection}{\numberline {4.2.5}Instrucion Design}{18}{subsection.4.2.5}%
\contentsline {subsection}{\numberline {4.2.6}Design Principle}{18}{subsection.4.2.6}%
\contentsline {paragraph}{Impossible Error Principle}{19}{section*.11}%
\contentsline {subsection}{\numberline {4.2.7}Summary: Introducition Syntax and Semantics}{19}{subsection.4.2.7}%
\contentsline {section}{\numberline {4.3}How to code operations?}{19}{section.4.3}%
\contentsline {subsection}{\numberline {4.3.1}Regularity Principle}{19}{subsection.4.3.1}%
\contentsline {subsection}{\numberline {4.3.2}Orthogonality and Symmetry}{19}{subsection.4.3.2}%
\contentsline {subsection}{\numberline {4.3.3}Pushing Symmetry and Orthogonality too far}{19}{subsection.4.3.3}%
\contentsline {paragraph}{Example from before}{20}{section*.12}%
\contentsline {subsection}{\numberline {4.3.4}Rrepresenting Control Flow}{20}{subsection.4.3.4}%
\contentsline {subsection}{\numberline {4.3.5}Simple Assignment/Moving Data}{20}{subsection.4.3.5}%
